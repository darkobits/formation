# ESLint Configuration

parserOptions:
  ecmaVersion: 6
  sourceType: module

env:
  es6: true
  node: true
  browser: true

rules:
  # For more information on any rule, see: http://eslint.org/docs/rules/<rule-name>

  #--------#
  # Errors #
  #--------#

  # Disallow trailing commas.
  comma-dangle:
    - error

  # Disallow assignment in test conditions, except if wrapped in parens.
  no-cond-assign:
    - error
    - except-parens

  # Disallow constant expressions in test conditions.
  no-constant-condition:
    - error

  # Disallow control characters in regular expressions.
  no-control-regex:
    - error

  # Disallow duplicate arguments in function definitions.
  no-dupe-args:
    - error

  # Disallow duplicate keys in object literals.
  no-dupe-keys:
    - error

  # Disallow duplicate case labels in switch statements.
  no-duplicate-case:
    - error

  # Disallow empty character classes in regular expressions.
  no-empty-character-class:
    - error

  # Disallow empty block statements.
  no-empty:
    - error

  # Disallow reassigning exceptions in catch clauses.
  no-ex-assign:
    - error

  # Disallow unnecessary boolean casts.
  no-extra-boolean-cast:
    - error

  # Disallow unnecessary semicolons.
  no-extra-semi:
    - error

  # Disallow reassigning function declarations.
  no-func-assign:
    - error

  # Disallow function and var declarations in nested blocks.
  no-inner-declarations:
    - error
    - both

  # Disallow invalid regular expression strings in RegExp constructors.
  no-invalid-regexp:
    - error

  # Disallow irregular whitespace.
  no-irregular-whitespace:
    - error

  # Disallow negating the left operand in expressions.
  no-negated-in-lhs:
    - error

  # Disallow calling global object properties as functions.
  no-obj-calls:
    - error

  # Disallow multiple spaces in regular expression literals.
  no-regex-spaces:
    - error

  # Disallow sparse arrays.
  no-sparse-arrays:
    - error

  # Disallow unreachable code after return, throw, continue, and break statements.
  no-unreachable:
    - error

  # Require calls to isNaN() when checking for NaN.
  use-isnan:
    - error

  # Enforce comparing typeof expressions against valid strings.
  valid-typeof:
    - error

  # Disallow confusing multiline expressions.
  no-unexpected-multiline:
    - error

  # Require getter/setter pairs in objects.
  accessor-pairs:
    - error

  # Require curly braces around all blocks.
  curly:
    - error
    - all

  # Enforce newline before dots in multi-line member expressions.
  dot-location:
    - error
    - property

  # Require === and !==.
  eqeqeq:
    - error

  # Require for-in loops over objects to contain a filtering statement.
  guard-for-in:
    - error

  # Disallow use of alert.
  no-alert:
    - error

  # Disallow use of caller/callee.
  no-caller:
    - error

  # Disallow use of eval.
  no-eval:
    - error

  # Disallow unnecessary function binding.
  no-extra-bind:
    - error

  # Disallow case statement fallthrough. (Does not affect empty cases.)
  no-fallthrough:
    - error

  # Disallow dangling decimals in numbers.
  no-floating-decimal:
    - error

  # Disallow implied eval() statements.
  no-implied-eval:
    - error

  # Disallow use of the __iterator__ property.
  no-iterator:
    - error

  # Disallow labeled statements.
  no-labels:
    - error

  # Disallow unnecessary nested blocks.
  no-lone-blocks:
    - error

  # Disallow functions in loops.
  no-loop-func:
    - error

  # Disallow multiple spaces.
  no-multi-spaces:
    - error

  # Disallow multi-line strings.
  no-multi-str:
    - error

  # Disallow reassignment of native objects.
  no-native-reassign:
    - error

  # Disallow the creation of functions using the Function constructor.
  no-new-func:
    - error

  # Disallow instances of primitive wrappers (String, Number, Boolean).
  no-new-wrappers:
    - error

  # Disallow the use of new without an assignment.
  no-new:
    - error

  # Disallow octal escape sequences in string literals.
  no-octal-escape:
    - error

  # Disallow octal literals.
  no-octal:
    - error

  # Disallow re-declaring variables.
  no-redeclare:
    - error

  # Disallow assignment in return statements.
  no-return-assign:
    - error
    - always

  # Disallow javascript:// URLs.
  no-script-url:
    - error

  # Disallow comparing variables to themselves.
  no-self-compare:
    - error

  # Disallow use of the comma operator.
  no-sequences:
    - error

  # Restrict what can be thrown as an exception.
  no-throw-literal:
    - error

  # Disallow unused expressions.
  no-unused-expressions:
    - error

  # Disallow unnecessary uses of call() and apply().
  no-useless-call:
    - error

  # Disallow use of the void operator.
  no-void:
    - error

  # Disallow use of 'with' statements.
  no-with:
    - error

  # Require a radix parameter when using parseInt().
  radix:
    - error

  # Require variable declarations to be at the top of their scope.
  vars-on-top:
    - error

  # Require IIFEs to be wrapped in parens.
  wrap-iife:
    - error
    - outside

  # Disallow Yoda conditions.
  yoda:
    - error
    - never
    - exceptRange: true

  # Disallow deleting variables.
  no-delete-var:
    - error

  # Disallow shadowing of restricted names.
  no-shadow-restricted-names:
    - error

  # Disallow initializing variables to 'undefined'.
  no-undef-init:
    - error

  # Disallow the use of undeclared variables.
  no-undef:
    - error

  # Disallow use of 'undefined' for variable names.
  no-undefined:
    - error

  # Disallow unused variables.
  no-unused-vars:
    - error

  # Disallow the use of variables before they have been defined.
  no-use-before-define:
    - error

  # Require return statements after callbacks are invoked.
  callback-return:
    - error

  # Require errors to be handled in callbacks.
  handle-callback-err:
    - error

  # Disallow mixing require statements with other variables.
  no-mixed-requires:
    - error
    -
      grouping: false
      allowCall: true

  # Disallow the new keyword with require calls.
  no-new-require:
    - error

  # Disallow string concatenation when using __dirname and __filename.
  no-path-concat:
    - error

  # Disallow the use of process.exit().
  no-process-exit:
    - error

  # Disallow spaces inside of square brackets.
  array-bracket-spacing:
    - error
    - never
    -
      singleValue: false

  # Enforce "One True Brace Style".
  brace-style:
    - error
    - 1tbs

  # Require camel case for variable names, except object properties.
  camelcase:
    - error
    -
      properties: never

  # Require a space after commas.
  comma-spacing:
    - error
    -
      after: true

  # Require a comma after each item in comma-separated lists.
  comma-style:
    - error

  # Disallow extraneous spaces in computed properties.
  computed-property-spacing:
    - error

  # Require a trailing newline at the end of each file.
  eol-last:
    - error

  # Require indentation of two spaces.
  indent:
    - error
    - 2
    -
      SwitchCase: 1

  # Require exactly one space after colons in object literals.
  key-spacing:
    - error

  # Require an empty line before block comments, and allow comments to be the first line of an object literal.
  lines-around-comment:
    - error
    -
      beforeBlockComment: true
      allowObjectStart: true

  # Require Unix-style linebreaks.
  linebreak-style:
    - error
    - unix

  # Require constructor function names to begin with a capital letter.
  new-cap:
    - error

  # Require parentheses when invoking a constructor with no arguments.
  new-parens:
    - error

  # Disallow if statements as the only statement in else blocks.
  no-lonely-if:
    - error

  # Disallow mixing spaces and tabs.
  no-mixed-spaces-and-tabs:
    - error

  # Disallow trailing whitespace at the end of lines.
  no-trailing-spaces:
    - error

  # Disallow ternary operators when simpler alternatives exist.
  no-unneeded-ternary:
    - error

  # Disallow spaces inside curly braces in object literals.
  object-curly-spacing:
    - error

  # Require single-quotes for string literals.
  quotes:
    - error
    - single

  # Require a single space after semi-colons.
  semi-spacing:
    - error

  # Require semi-colons where they are valid.
  semi:
    - error

  # Require spaces before and after keywords.
  keyword-spacing:
    - error

  # Require a space before curly braces that begin blocks.
  space-before-blocks:
    - error
    - always

  # Require a space between function names and the opening paren.
  space-before-function-paren:
    - error
    - always

  # Disallow spaces inside parens.
  space-in-parens:
    - error
    - never

  # Require spaces around operators.
  space-infix-ops:
    - error
    -
      int32Hint: false

  # Require a space after unary operators.
  space-unary-ops:
    - error

  # Require a space at the beginning of comments.
  spaced-comment:
    - error
    - always

  # Require parens around arrow function parameters only when needed.
  arrow-parens:
    - error
    - as-needed

  # Require spaces before and after the arrow in arrow functions.
  arrow-spacing:
    - error
    -
      before: true
      after: true

  # Require calls to super() in derived classes.
  constructor-super:
    - error

  # Require the asterisk in generator functions to stick to the function keyword.
  generator-star-spacing:
    - error
    - after

  # Disallow modifying variables of class declarations.
  no-class-assign:
    - error

  # Disallow modifying variables that are declared using const.
  no-const-assign:
    - error

  # Disallow use of this/super before calling super() in constructors.
  no-this-before-super:
    - error

  # Disallow generator functions that do not have yield statements.
  require-yield:
    - error

  # Enforce a maximum line length of 120 characters, except comments.
  max-len:
    - error
    -
      code: 120
      ignoreComments: true
      ignoreTrailingComments: true

  #----------#
  # Warnings #
  #----------#

  # Suggest using const for variables that are not reassigned.
  prefer-const:
    - warn

  # Suggest using the spread operator instead of .apply().
  prefer-spread:
    - warn

  # Suggest using Reflect methods where applicable.
  prefer-reflect:
    - warn

  # Require a 'default' case in switch statements.
  default-case:
    - warn

  # Discourage extending of native objects.
  no-extend-native:
    - warn

  # Discourage terse type coersions of numbers and strings.
  no-implicit-coercion:
    - warn
    -
      boolean: false
      number: true
      string: true

  # Discourage the use of console.
  no-console:
    - warn

  # Discourage the use of debugger.
  no-debugger:
    - warn

  # Discourage unnecessary parentheses.
  no-extra-parens:
    - warn

  # Encourage valid JSDoc comments.
  valid-jsdoc:
    - warn
    -
      prefer:
        arg: param
        argument: param
        returns: return
      preferType:
        Boolean: boolean
        Number: number
        Object: object
        String: string
      requireReturn: false
      requireReturnType: true
      requireParamDescription: false
      requireReturnDescription: false
